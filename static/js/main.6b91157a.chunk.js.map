{"version":3,"sources":["features/counter/counterReducer.ts","store.ts","features/counter/actionTypes.ts","pages/About.tsx","pages/dots.tsx","pages/Home.tsx","App.tsx","index.tsx"],"names":["initialState","value","rootReducer","combineReducers","count","state","action","type","store","createStore","devToolsEnhancer","About","history","useHistory","className","onClick","push","withParentSize","props","maxWidth","height","width","parentWidth","console","log","arr","xMax","xScale","scaleLinear","domain","range","clamp","purple3","avg","points","reduce","p","c","length","fill","Group","map","point","i","cx","cy","Circle","key","r","Text","verticalAnchor","style","fontSize","Marker","from","x","y","to","stroke","strokeWidth","label","toFixed","labelFill","labelStroke","labelDx","labelDy","AxisBottom","top","scale","tickFormat","tick","tickStroke","tickLength","hideZero","tickLabelProps","index","textAnchor","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","option","marginRight","isReviewPost","item","some","test","data","title","toLowerCase","startsWith","isReviewPostFuzzy","includes","normaliseScore","score","tmp","search","Number","split","tmp2","extractReviewTitle","searchTerm","substring","indexOf","reducer","Home","classes","React","useState","open","setOpen","options","setOptions","searchTermRaw","setSearchTerm","choice","setChoice","useReducer","scores","setScores","useDebounce","loading","getScore","useCallback","postId","a","fetch","response","json","thread","matches","children","body","match","replace","scoreNorm","permalink","useEffect","active","reddit","reviews","forEach","sort","b","Array","Set","name","Container","component","CssBaseline","Typography","variant","role","aria-label","noValidate","Autocomplete","id","blurOnSelect","onClose","onInputChange","event","reason","onChange","getOptionSelected","getOptionLabel","renderInput","params","TextField","InputProps","endAdornment","Fragment","CircularProgress","color","size","Grid","container","xs","Link","href","align","Box","mt","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b91157a.chunk.js","sourcesContent":["import { INCREMENT_COUNTER, DECREMENT_COUNTER } from './actionTypes'\nimport { CounterActionTypes } from './types'\n\nconst initialState = {\n  value: 0,\n}\n\nexport default (state = initialState, action: CounterActionTypes) => {\n  switch (action.type) {\n    case INCREMENT_COUNTER:\n      return { ...state, value: state.value + 1 }\n    case DECREMENT_COUNTER:\n      return { ...state, value: state.value - 1 }\n    default:\n      return state\n  }\n}\n","import { combineReducers, createStore } from 'redux'\nimport { devToolsEnhancer } from 'redux-devtools-extension'\nimport { CounterReducer } from './features/counter'\n\n/* Create root reducer, containing all features of the application */\nconst rootReducer = combineReducers({\n  count: CounterReducer,\n})\n\nconst store = createStore(\n  rootReducer,\n  /* preloadedState, */ devToolsEnhancer({})\n)\n\nexport default store\n","export const INCREMENT_COUNTER = 'INCREMENT_COUNTER'\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER'\n","import React, { Fragment } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nexport const About: React.FC = () => {\n  const history = useHistory()\n\n  return (\n    <Fragment>\n      <h1>About</h1>\n      <p>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptas\n        possimus doloribus error cumque autem asperiores, ullam deserunt quidem\n        omnis doloremque itaque eius eaque sint facilis unde tenetur reiciendis\n        aliquam soluta?\n      </p>\n      <button type=\"button\" className=\"btn\" onClick={() => history.push('/')}>\n        Go back\n      </button>\n    </Fragment>\n  )\n}\n","import { AxisBottom } from '@vx/axis'\nimport { Group } from '@vx/group'\nimport { Marker } from '@vx/marker'\nimport { withParentSize } from '@vx/responsive'\nimport { scaleLinear } from '@vx/scale'\nimport { Circle } from '@vx/shape'\nimport { Text } from '@vx/text'\nimport React from 'react'\n\n// const points = genRandomNormalPoints(10).filter((d, i) => {\n//   return i < 10\n// })\n\n// const x = (d: any) => d[0]\n// const y = (d: any) => d[1]\n// const z = (d: any) => d[2]\n\n// let tooltipTimeout: any\n\nconst average = (arr: number[]) =>\n  arr.reduce((p: number, c: number) => p + c, 0) / arr.length\n\nexport default withParentSize((props: any) => {\n  const { maxWidth, height } = props\n  const width: number =\n    props.parentWidth > maxWidth ? props.maxWidth : props.parentWidth\n  console.log('> width', width)\n\n  const xMax = width\n  // const yMax = height\n\n  const xScale = scaleLinear({\n    domain: [0, 10],\n    range: [0, xMax],\n    clamp: true,\n  })\n  // console.log(xScale.ticks())\n  // const yScale = scaleLinear({\n  //   domain: [0.75, 1.6],\n  //   range: [yMax, 0],\n  //   clamp: true,\n  // })\n\n  // console.log(props)\n\n  const purple3 = 'rgba(64, 64, 64, 0.6)'\n  const formatTick = (tick: number) => tick\n  const avg = average(props.points)\n  // console.log('> props.points', props.points)\n  // console.log('> avg', avg)\n  // console.log('> props', props)\n\n  return (\n    <svg width={width * 1.5} height={height}>\n      {/* <GradientPinkRed id=\"pink\" /> */}\n      <rect width={width} height={height} fill={'rgba(64, 64, 64, 0)'} />\n      <Group>\n        {props.points.map((point: any, i: any) => {\n          // const cx = xScale(x(point))\n          const cx = xScale(point)\n          // console.log(point, cx)\n          // const cx = point\n          // console.log(point, x(point), cx)\n          // const cy = yScale(y(point))\n          // console.log(point, cy)\n          const cy = height * 0.3\n          // const r = i % 3 === 0 ? 2 : 2.765\n          const r = 3\n\n          return (\n            <Circle\n              key={`point-${i}`}\n              className=\"dot\"\n              cx={cx}\n              cy={cy}\n              r={r}\n              fill=\"rgba(246, 196, 49, 0.5)\"\n            />\n          )\n        })}\n      </Group>\n      <Text\n        verticalAnchor=\"start\"\n        style={{\n          fontSize: 11,\n          fill: 'rgba(64, 64, 64, 0.6)',\n        }}\n      >{`n = ${props.points.length}`}</Text>\n      <Marker\n        from={{ x: xScale(avg), y: 0 }}\n        to={{ x: xScale(avg), y: height * 0.15 }}\n        stroke={'rgba(64, 64, 64, 0.4'}\n        strokeWidth={1.5}\n        label={`avg = ${avg.toFixed(2)}`}\n        labelFill={'rgba(64, 64, 64, 0.6)'}\n        labelStroke={'none'}\n        labelDx={6}\n        labelDy={10}\n      />\n      <AxisBottom\n        top={height * 0.6}\n        scale={xScale}\n        tickFormat={formatTick}\n        stroke={purple3}\n        tickStroke={purple3}\n        tickLength={4}\n        hideZero={false}\n        tickLabelProps={(value: any, index: any) => ({\n          fill: purple3,\n          fontSize: 11,\n          textAnchor: 'middle',\n          // transform: 'translate(0, 1)',\n        })}\n      />\n    </svg>\n  )\n})\n","import {\n  Box,\n  CircularProgress,\n  Container,\n  CssBaseline,\n  Grid,\n  Link,\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport React, { ChangeEvent, Fragment, useCallback } from 'react'\nimport { useDebounce } from 'use-debounce'\nimport { default as DotsChart } from './dots'\ninterface RedditPost {\n  data: {\n    title: string\n    url: string\n    permalink: string\n    name: string\n  }\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  option: {\n    fontSize: 15,\n    '& > span': {\n      marginRight: 10,\n      fontSize: 18,\n    },\n  },\n}))\n\nconst isReviewPost = (item: RedditPost) => {\n  return ['review #', 'bottle review #'].some((test: string) => {\n    return item.data.title.toLowerCase().startsWith(test)\n  })\n}\n\nconst isReviewPostFuzzy = (item: RedditPost) => {\n  return ['review #', 'review ', 'bottle review #'].some((test: string) => {\n    return item.data.title.toLowerCase().includes(test)\n  })\n}\n\nconst normaliseScore = (score: string) => {\n  console.log('normaliseScore', score)\n  // let scoreNorm = score\n  let tmp = null\n\n  // Individual ratings e.g. Rating: 70, Rating: 8\n  if (score.search(/^[0-9]{1,}$/g) !== -1) {\n    tmp = Number(score)\n    // scoreNorm = tmp <= 10 ? `${tmp}/10` : `${tmp}/100`\n    // console.log('#', score, scoreNorm)\n    return Number(tmp <= 10 ? tmp : tmp / 10)\n  }\n\n  // Scores out of X e.g. 70/100, 8/10\n  if (score.search(/^[0-9.]{1,}\\/[0-9]{3}$/g) !== -1) {\n    tmp = score.split('/')\n    const tmp2 = Number(tmp[0])\n    // const tmp3 = Number(tmp[1])\n    // scoreNorm = `${tmp2 / 10}/${tmp3 / 10}`\n    // console.log('!', score, scoreNorm)\n    return Number(tmp2 <= 10 ? tmp2 : tmp2 / 10)\n  }\n\n  // @TODO Validate out of 10 so we can throw out weird stuff like \"1/2 a shot\"\n\n  // Catch and log\n  return null\n\n  // if (scoreNorm.search(/[0-9.]{1,}\\/10/g) !== -1) {\n  //   console.log('>', score, scoreNorm)\n  //   return Number(scoreNorm.split('/')[0])\n  // } else {\n  //   // Catch and log\n  //   return null\n  // }\n}\n\nconst extractReviewTitle = (item: RedditPost, searchTerm: string) => {\n  return item.data.title.substring(\n    item.data.title.toLowerCase().indexOf(searchTerm.toLowerCase())\n  )\n}\n\nfunction reducer(state: number[], score: number | null) {\n  if (score !== null) {\n    return [...state, score]\n  }\n  return []\n}\n\nexport const Home: React.FC = () => {\n  const classes = useStyles()\n\n  const [open, setOpen] = React.useState(false)\n  const [options, setOptions] = React.useState<string[]>([])\n  const [searchTermRaw, setSearchTerm] = React.useState<string | null>(null)\n  const [choice, setChoice] = React.useState<string | null>(null)\n  const [scores, setScores] = React.useReducer(reducer, [])\n\n  const [searchTerm] = useDebounce(searchTermRaw, 500)\n  const loading = open && options.length === 0\n\n  const getScore = useCallback(\n    (item: RedditPost, postId: string) => {\n      ;(async () => {\n        const response = await fetch(\n          `https://www.reddit.com/comments/${postId}/.json`\n        )\n        const thread = await response.json()\n        console.log('thread', thread)\n        // console.log('thread', thread[1].data.children[0].data.body)\n\n        let matches = thread[1].data.children[0].data.body.match(\n          /[0-9.]{1,}\\/[0-9]{1,3}/g\n        )\n\n        if (matches === null) {\n          matches = thread[1].data.children[0].data.body.match(\n            /Rating: [0-9.]{1,}/g\n          )\n          if (matches !== null) {\n            matches = matches.map((match: string) => {\n              return match.replace('Rating: ', '')\n            })\n          }\n        }\n\n        if (matches !== null) {\n          const score = matches[matches.length - 1]\n          const scoreNorm = normaliseScore(score)\n          console.log(item.data.title, 'Score', scoreNorm)\n          console.log(`https://www.reddit.com${item.data.permalink}`)\n          if (scoreNorm !== null) {\n            setScores(scoreNorm)\n          }\n        } else {\n          console.log('thread', thread[1].data.children[0].data.body)\n          console.log(item.data.title, 'No match')\n          return null\n        }\n      })()\n    },\n    [setScores]\n  )\n\n  React.useEffect(() => {\n    let active = true\n    // console.log('Searching for', searchTerm)\n\n    if (searchTerm === null) {\n      return undefined\n    }\n\n    ;(async () => {\n      const response = await fetch(\n        `https://www.reddit.com/r/scotch/search.json?q=title:review%20AND%20${searchTerm}&sort=new&restrict_sr=1&limit=100`\n      )\n      const reddit = await response.json()\n      const reviews: string[] = []\n\n      console.log(\n        'Found n items',\n        reddit.data.children.length,\n        'for',\n        searchTerm\n      )\n      if (reddit.data.children.length === 0) {\n        if (active) {\n          setOptions([''])\n        }\n      } else {\n        reddit.data.children.forEach((item: RedditPost) => {\n          if (\n            isReviewPost(item) &&\n            item.data.title.toLowerCase().includes(searchTerm.toLowerCase())\n          ) {\n            reviews.push(extractReviewTitle(item, searchTerm))\n          } else {\n            // console.log('SKIP', item.data.title)\n          }\n        })\n\n        reviews.sort((a: string, b: string) => {\n          return a.length - b.length\n        })\n\n        if (active) {\n          setOptions(Array.from(new Set(reviews)))\n        }\n      }\n    })()\n\n    return () => {\n      active = false\n    }\n  }, [loading, searchTerm])\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([])\n    }\n  }, [open])\n\n  React.useEffect(() => {\n    if (choice !== null) {\n      // console.log('Choice is now', choice)\n\n      ;(async () => {\n        const response = await fetch(\n          `https://www.reddit.com/r/scotch/search.json?q=title:review%20AND%20${choice}&sort=new&restrict_sr=1&limit=100`\n        )\n        const reddit = await response.json()\n\n        const reviews: RedditPost[] = []\n        reddit.data.children.forEach((item: RedditPost) => {\n          if (\n            isReviewPostFuzzy(item) &&\n            item.data.title.toLowerCase().includes(choice.toLowerCase())\n          ) {\n            // console.log('OK', item.data.title)\n            reviews.push(item)\n          } else {\n            console.log('SKIP', item.data.title)\n          }\n        })\n\n        console.log('# Fetch scores for', reviews.length, 'items')\n        reviews.forEach((item: RedditPost) => {\n          const postId = item.data.name.split('t3_')[1]\n\n          if (\n            postId === '4pahzq' ||\n            postId === 'as7w3b' ||\n            postId === '4w748u' ||\n            postId.length > 0\n          ) {\n            console.log(item.data.title)\n            console.log(item.data.name, postId)\n            console.log(`https://www.reddit.com${item.data.permalink}`)\n            console.log(item.data)\n            const score = getScore(item, postId)\n            console.log(score)\n          }\n        })\n      })()\n    }\n  }, [choice, getScore])\n\n  // React.useEffect(() => {\n  //   if (scores.length > 0) {\n  //     console.log('State Scores', scores)\n  //   }\n  // }, [scores])\n\n  return (\n    <Fragment>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          {/* <DotsChart\n            width={400}\n            height={80}\n            points={[8.3, 8.6, 8, 9.3, 8.8, 9.5, 9.3, 9.5, 9.3, 9.4, 9, 9.4]}\n          /> */}\n          <Typography component=\"h1\" variant=\"h1\">\n            <span role=\"img\" aria-label=\"Whisky glass image\">\n              🥃\n            </span>\n          </Typography>\n          <form className={classes.form} noValidate>\n            <Autocomplete\n              id=\"asynchronous-demo\"\n              blurOnSelect\n              open={open}\n              onClose={() => {\n                setOpen(false)\n              }}\n              onInputChange={(event: object, value: string, reason: string) => {\n                // console.log(reason, value)\n                if (value.length >= 5) {\n                  setSearchTerm(value)\n                  if (reason === 'input') {\n                    setOpen(true)\n                  }\n                }\n              }}\n              onChange={(event: ChangeEvent<{}>, value: string | null) => {\n                setChoice(value)\n                setScores(null)\n              }}\n              getOptionSelected={(option, value) => option === value}\n              getOptionLabel={option => option}\n              options={options}\n              loading={loading}\n              renderInput={params => (\n                <TextField\n                  {...params}\n                  label=\"Search for whisky reviews\"\n                  variant=\"outlined\"\n                  InputProps={{\n                    ...params.InputProps,\n                    endAdornment: (\n                      <React.Fragment>\n                        {loading ? (\n                          <CircularProgress color=\"inherit\" size={20} />\n                        ) : null}\n                        {params.InputProps.endAdornment}\n                      </React.Fragment>\n                    ),\n                  }}\n                />\n              )}\n            />\n            <Grid container style={{ marginTop: 25 }}>\n              <Grid item style={{ width: '100%' }}>\n                {choice !== null && scores.length > 0 && (\n                  <DotsChart maxWidth={400} height={80} points={scores} />\n                )}\n              </Grid>\n              <Grid item xs>\n                <Link\n                  href=\"https://www.reddit.com/r/Scotch/\"\n                  variant=\"overline\"\n                  display=\"block\"\n                  align=\"center\"\n                >\n                  /r/Skotch{' '}\n                  <span role=\"img\" aria-label=\"Whisky glass image\">\n                    ❤️\n                  </span>\n                </Link>\n              </Grid>\n              <Grid item>\n                {/* <Link href=\"#\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link> */}\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n        <Box mt={8}>{/* <Copyright /> */}</Box>\n      </Container>\n    </Fragment>\n  )\n}\n","import React, { Fragment } from 'react'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport { About } from './pages/About'\nimport { Home } from './pages/Home'\n\nconst App: React.FC = () => {\n  return (\n    <HashRouter>\n      {/* <Navbar /> */}\n      <Switch>\n        <Fragment>\n          <div className=\"container\">\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </Fragment>\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport './index.css'\n\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}